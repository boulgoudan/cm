---
- name: Install nvm
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
    executable: /bin/zsh

- name: Install node versions
  shell: "source {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install {{ item }} -g" 
  loop: "{{ node_versions }}"

- name: Update homebrew and upgrade all packages
  community.general.homebrew:
    update_homebrew: true
    upgrade_all: true

- name: Install Homebrew packages
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop: "{{ brew_packages.install }}"

- name: Uninstall Homebrew packages
  community.general.homebrew:
    name: "{{ item }}"
    state: absent
  loop: "{{ brew_packages.uninstall }}"

- name: Upgrade all Homebrew casks
  community.general.homebrew_cask:
    upgrade_all: true

- name: Install Homebrew casks
  community.general.homebrew_cask:
    name: "{{ item }}"
    state: present
  loop: "{{ brew_casks.install }}"

- name: Uninstall Homebrew casks
  community.general.homebrew_cask:
    name: "{{ item }}"
    state: absent
  loop: "{{ brew_casks.uninstall }}"

- name: Install taps (Third-party Homebrew packages)
  community.general.homebrew_tap:
    name: "{{ item }}"
    state: present
  loop: "{{ brew_taps.install }}"

- name: Uninstall taps (Third-party Homebrew packages)
  community.general.homebrew_tap:
    name: "{{ item }}"
    state: absent
  loop: "{{ brew_taps.uninstall }}"

- name: Install Terraform Versions
  shell: "tenv tf install {{ item }}" 
  loop: "{{ terraform_versions }}"

- name: Use a specific Terraform Version
  shell: "tenv tf use 1.10.3" 

- name: Install Terragrunt Versions
  shell: "tenv tg install {{ item }}"
  loop: "{{ terragrunt_versions }}"

- name: Use a specific Terragrunt Version
  shell: "tenv tg use 0.71.1"

- name: Install VSCode extensions
  shell: "code --install-extension {{ item }}" 
  loop: "{{ vscode_extensions }}"

- name: Check if Oh My ZSH is installed
  stat:
    path: ~/.oh-my-zsh
  register: ohmyzsh

- name: Install Oh My ZSH
  script: install-oh-my-zsh.sh
  when: not ohmyzsh.stat.exists

- name: Add Oh My ZSH configs to .zprofile
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zprofile"
    block: |
      # brew
      eval "$(/opt/homebrew/bin/brew shellenv)"
      # nvm
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

      # Java
      export JAVA_HOME=/opt/homebrew/Cellar/openjdk/23.0.1/libexec/openjdk.jdk/Contents/Home
      export PATH="$PATH:$JAVA_HOME"

      plugins=(
        git
        git-prompt
        docker
      )
      
      # Language
      export LANG=en_US.UTF-8
      export LANGUAGE=en_US.UTF-8
      export LC_ALL=en_US.UTF-8

      # Default editor
      export EDITOR='vim'

      # TENV
      #export PATH="$HOME/.tenv/bin:$PATH"

      # MySQL Client commands
      #export PATH="$PATH:/opt/homebrew/opt/mysql-client/bin"

      alias ls='ls -G --color'
      alias lsa='ls -aG --color'
      alias ll='ls -lG --color'
      alias lla='ls -alG --color'

      # Aliases for remote EC2 instances
      #alias sandbox-host='ssh -i ~/dev-sandbox/terraform-workspace-sandbox/keys/sandbox-server-key -L 5901:localhost:5900 user@sandbox.example.com'
      #alias ngrok-host='ssh -p 22162 -L 5902:localhost:5900 user@1.tcp.ngrok.io'
