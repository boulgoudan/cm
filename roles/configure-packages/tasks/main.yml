---
- name: Install nvm
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | zsh
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
    executable: /bin/zsh

- name: Install node versions
  shell: "source {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install {{ item }} -g" 
  loop: "{{ node_versions }}"

- name: Update homebrew and upgrade all packages
  community.general.homebrew:
    update_homebrew: true
    upgrade_all: true

- name: Install Homebrew Packages
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop: "{{ brew_packages }}"

- name: Upgrade all Homebrew casks
  community.general.homebrew_cask:
    upgrade_all: true

- name: Install Homebrew casks
  community.general.homebrew_cask:
    name: "{{ item }}"
    state: present
  loop: "{{ brew_casks }}"

- name: Uninstall Homebrew casks
  community.general.homebrew_cask:
    name: "{{ item }}"
    state: absent
  loop: "{{ brew_casks_to_uninstall }}"

- name: Install Homebrew taps
  community.general.homebrew_tap:
    name: "{{ item }}"
    url: "https://github.com/homeport/dyff"
    state: present
  loop: "{{ brew_taps }}"

- name: Install Terraform Versions
  shell: "tfenv install {{ item }}" 
  loop: "{{ terraform_versions }}"

- name: Use a specific Terraform Version
  shell: "tfenv use 1.1.7" 

- name: Install VSCode extensions
  shell: "code --install-extension {{ item }}" 
  loop: "{{ vscode_extensions }}"

- name: Check if Oh My ZSH is installed
  stat:
    path: ~/.oh-my-zsh
  register: ohmyzsh

- name: Install Oh My ZSH
  script: install-oh-my-zsh.sh
  when: not ohmyzsh.stat.exists

- name: Add Oh My ZSH configs to .zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    block: |
      export PATH=$PATH:/Users/moustapha/Library/Python/3.9/bin

      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

      source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
      source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

      # Java
      export JAVA_HOME=/opt/homebrew/Cellar/openjdk/22.0.2/libexec/openjdk.jdk/Contents/Home
      export PATH="$PATH:$JAVA_HOME"

      # Path to your oh-my-zsh installation.
      export ZSH="$HOME/.oh-my-zsh"

      ZSH_THEME="robbyrussell"
      plugins=(
        git
        git-prompt
        docker
      )
      
      source $ZSH/oh-my-zsh.sh

      export LANG=en_US.UTF-8
      export LANGUAGE=en_US.UTF-8
      export LC_ALL=en_US.UTF-8

      export EDITOR='vim'

      # Variables for platform containers
      export UID
      export GID=$(id -g)
      export REGION=us-east-1
      export PLATFORM_DIR=/System/Volumes/Data/Users/moustapha/dev/platform
      export SF_DOCKER_MAC_SETUP_EXECUTED=true
      #. /opt/homebrew/share/google-cloud-sdk/path.zsh.inc
      #. /opt/homebrew/share/google-cloud-sdk/completion.zsh.inc

      # TFENV
      export PATH="$HOME/.tfenv/bin:$PATH"

      # mysql client commands
      export PATH="$PATH:/opt/homebrew/opt/mysql-client/bin"

      alias ls='ls -G --color'
      alias lsa='ls -aG --color'
      alias ll='ls -lG --color'
      alias lla='ls -alG --color'

      # Aliases for Mobile Build Machines (MBM)
      alias mbm-production='ssh -i ~/dev-mbm/mbm-terraform-workspace-sandbox/keys/sandbox-build-server-key -L 5901:localhost:5900 sftool@54.80.236.23'
      alias mbm-staging='ssh -i ~/dev-mbm/mbm-terraform-workspace-sandbox/keys/sandbox-build-server-key -L 5902:localhost:5900 sftool@54.160.252.42'
      alias mbm-canary='ssh -i ~/dev-mbm/mbm-terraform-workspace-sandbox/keys/sandbox-build-server-key -L 5903:localhost:5900 sftool@23.20.25.144'
      #alias mbm-sandbox='ssh -i ~/dev-mbm/mbm-terraform-workspace-sandbox/keys/sandbox-build-server-key -L 5904:localhost:5900 sftool@mac-mbm-sandbox.salesfloor.net'
      alias mbm-macmini='ssh -p 22162 -L 5905:localhost:5900 sftool@1.tcp.ngrok.io'
